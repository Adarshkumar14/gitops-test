apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  labels:
    cluster_id: e2a33ea4-a1b7-40ce-aa62-5284a03d7e07
    subject: custom-chaos-workflow_litmus
    workflow_id: fef593d2-b20e-4f92-838a-b35c3a1724cb
    workflows.argoproj.io/controller-instanceid: e2a33ea4-a1b7-40ce-aa62-5284a03d7e07
  name: custom-chaos-workflow-1650257194
  namespace: litmus
spec:
  arguments:
    parameters:
    - name: adminModeNamespace
      value: litmus
  entrypoint: custom-chaos
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
  - inputs: {}
    metadata: {}
    name: custom-chaos
    outputs: {}
    steps:
    - - arguments: {}
        name: install-chaos-experiments
        template: install-chaos-experiments
    - - arguments: {}
        name: kubelet-service-kill
        template: kubelet-service-kill
    - - arguments: {}
        name: revert-chaos
        template: revert-chaos
  - container:
      args:
      - kubectl apply -f /tmp/kubelet-service-kill.yaml -n {{workflow.parameters.adminModeNamespace}}
        |  sleep 30
      command:
      - sh
      - -c
      image: litmuschaos/k8s:2.7.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: kubelet-service-kill
        path: /tmp/kubelet-service-kill.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Kills the kubelet service on the application node to check the resiliency.
            kind: ChaosExperiment
            metadata:
              name: kubelet-service-kill
              labels:
                name: kubelet-service-kill
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: 2.8.0
            spec:
              definition:
                scope: Cluster
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - ""
                    resources:
                      - pods/exec
                    verbs:
                      - get
                      - list
                      - create
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                  - apiGroups:
                      - ""
                    resources:
                      - nodes
                    verbs:
                      - get
                      - list
                image: litmuschaos/go-runner:2.8.0
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name kubelet-service-kill
                command:
                  - /bin/bash
                env:
                  - name: TOTAL_CHAOS_DURATION
                    value: "60"
                  - name: RAMP_TIME
                    value: ""
                  - name: LIB
                    value: litmus
                  - name: NODE_LABEL
                    value: ""
                  - name: LIB_IMAGE
                    value: ubuntu:16.04
                  - name: TARGET_NODE
                    value: ""
                labels:
                  name: kubelet-service-kill
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/service-kill: "true"
                  app.kubernetes.io/version: 2.8.0
    metadata: {}
    name: install-chaos-experiments
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-kubelet-service-kill.yaml
      - -saveName=/tmp/engine-name
      image: litmuschaos/litmus-checker:2.7.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: kubelet-service-kill
        path: /tmp/chaosengine-kubelet-service-kill.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              generateName: kubelet-service-kill
              labels:
                instance_id: bc6a38ea-2850-4094-9587-ebbfd4b5a7fb
                context: kubelet-service-kill_litmus
                workflow_name: custom-chaos-workflow-1650257194
            spec:
              engineState: active
              auxiliaryAppInfo: ""
              chaosServiceAccount: litmus-admin
              experiments:
                - name: kubelet-service-kill
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "60"
                        - name: TARGET_NODE
                          value: ""
                    probe: []
              annotationCheck: "false"
    metadata:
      labels:
        weight: "10"
    name: kubelet-service-kill
    outputs: {}
  - container:
      args:
      - 'kubectl delete chaosengine -l ''instance_id in (bc6a38ea-2850-4094-9587-ebbfd4b5a7fb,
        )'' -n {{workflow.parameters.adminModeNamespace}} '
      command:
      - sh
      - -c
      image: litmuschaos/k8s:latest
      name: ""
      resources: {}
    inputs: {}
    metadata: {}
    name: revert-chaos
    outputs: {}
status:
  finishedAt: null
  startedAt: null
