apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  creationTimestamp: null
  labels:
    cluster_id: 65c0cb39-6f80-4d3b-9cc5-51a4fd04db57
    subject: custom-chaos-workflow_litmus
    workflow_id: 0547d7d2-6a2f-4f38-81d7-3c54b3e6b9fb
    workflows.argoproj.io/controller-instanceid: 65c0cb39-6f80-4d3b-9cc5-51a4fd04db57
  name: custom-chaos-workflow-1652688816
  namespace: litmus
spec:
  concurrencyPolicy: Forbid
  schedule: 0 0-23 * * *
  startingDeadlineSeconds: 0
  timezone: Asia/Calcutta
  workflowMetadata:
    creationTimestamp: null
    labels:
      cluster_id: 65c0cb39-6f80-4d3b-9cc5-51a4fd04db57
      workflow_id: 0547d7d2-6a2f-4f38-81d7-3c54b3e6b9fb
      workflows.argoproj.io/controller-instanceid: 65c0cb39-6f80-4d3b-9cc5-51a4fd04db57
  workflowSpec:
    arguments:
      parameters:
      - name: adminModeNamespace
        value: litmus
    entrypoint: custom-chaos
    imagePullSecrets:
    - name: ddd
    podGC:
      strategy: OnWorkflowCompletion
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccountName: argo-chaos
    templates:
    - inputs: {}
      metadata: {}
      name: custom-chaos
      outputs: {}
      steps:
      - - arguments: {}
          name: install-chaos-experiments
          template: install-chaos-experiments
      - - arguments: {}
          name: pod-network-corruption-zkp
          template: pod-network-corruption-zkp
      - - arguments: {}
          name: revert-chaos
          template: revert-chaos
    - container:
        args:
        - kubectl apply -f /tmp/pod-network-corruption-zkp.yaml -n {{workflow.parameters.adminModeNamespace}}
          |  sleep 30
        command:
        - sh
        - -c
        image: docker.io/chaosnative/k8s:2.8.0
        name: ""
        resources: {}
      inputs:
        artifacts:
        - name: pod-network-corruption-zkp
          path: /tmp/pod-network-corruption-zkp.yaml
          raw:
            data: |
              apiVersion: litmuschaos.io/v1alpha1
              description:
                message: |
                  Inject network packet corruption into application pod
              kind: ChaosExperiment
              metadata:
                name: pod-network-corruption
                labels:
                  name: pod-network-corruption
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: chaosexperiment
                  app.kubernetes.io/version: 2.8.0
              spec:
                definition:
                  scope: Namespaced
                  permissions:
                    - apiGroups:
                        - ""
                      resources:
                        - pods
                      verbs:
                        - create
                        - delete
                        - get
                        - list
                        - patch
                        - update
                        - deletecollection
                    - apiGroups:
                        - ""
                      resources:
                        - events
                      verbs:
                        - create
                        - get
                        - list
                        - patch
                        - update
                    - apiGroups:
                        - ""
                      resources:
                        - configmaps
                      verbs:
                        - get
                        - list
                    - apiGroups:
                        - ""
                      resources:
                        - pods/log
                      verbs:
                        - get
                        - list
                        - watch
                    - apiGroups:
                        - ""
                      resources:
                        - pods/exec
                      verbs:
                        - get
                        - list
                        - create
                    - apiGroups:
                        - apps
                      resources:
                        - deployments
                        - statefulsets
                        - replicasets
                        - daemonsets
                      verbs:
                        - list
                        - get
                    - apiGroups:
                        - apps.openshift.io
                      resources:
                        - deploymentconfigs
                      verbs:
                        - list
                        - get
                    - apiGroups:
                        - ""
                      resources:
                        - replicationcontrollers
                      verbs:
                        - get
                        - list
                    - apiGroups:
                        - argoproj.io
                      resources:
                        - rollouts
                      verbs:
                        - list
                        - get
                    - apiGroups:
                        - batch
                      resources:
                        - jobs
                      verbs:
                        - create
                        - list
                        - get
                        - delete
                        - deletecollection
                    - apiGroups:
                        - litmuschaos.io
                      resources:
                        - chaosengines
                        - chaosexperiments
                        - chaosresults
                      verbs:
                        - create
                        - list
                        - get
                        - patch
                        - update
                        - delete
                  image: docker.io/chaosnative/go-runner:2.8.0
                  imagePullPolicy: Always
                  args:
                    - -c
                    - ./experiments -name pod-network-corruption
                  command:
                    - /bin/bash
                  env:
                    - name: TARGET_CONTAINER
                      value: ""
                    - name: LIB_IMAGE
                      value: litmuschaos/go-runner:2.8.0
                    - name: NETWORK_INTERFACE
                      value: eth0
                    - name: TC_IMAGE
                      value: gaiadocker/iproute2
                    - name: NETWORK_PACKET_CORRUPTION_PERCENTAGE
                      value: "100"
                    - name: TOTAL_CHAOS_DURATION
                      value: "60"
                    - name: RAMP_TIME
                      value: ""
                    - name: LIB
                      value: litmus
                    - name: PODS_AFFECTED_PERC
                      value: ""
                    - name: TARGET_PODS
                      value: ""
                    - name: NODE_LABEL
                      value: ""
                    - name: CONTAINER_RUNTIME
                      value: docker
                    - name: DESTINATION_IPS
                      value: ""
                    - name: DESTINATION_HOSTS
                      value: ""
                    - name: SOCKET_PATH
                      value: /var/run/docker.sock
                    - name: SEQUENCE
                      value: parallel
                  labels:
                    name: pod-network-corruption
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: experiment-job
                    app.kubernetes.io/runtime-api-usage: "true"
                    app.kubernetes.io/version: 2.8.0
      metadata: {}
      name: install-chaos-experiments
      outputs: {}
    - container:
        args:
        - -file=/tmp/chaosengine-pod-network-corruption-zkp.yaml
        - -saveName=/tmp/engine-name
        image: docker.io/chaosnative/litmus-checker:2.8.0
        name: ""
        resources: {}
      inputs:
        artifacts:
        - name: pod-network-corruption-zkp
          path: /tmp/chaosengine-pod-network-corruption-zkp.yaml
          raw:
            data: |
              apiVersion: litmuschaos.io/v1alpha1
              kind: ChaosEngine
              metadata:
                namespace: "{{workflow.parameters.adminModeNamespace}}"
                generateName: pod-network-corruption-zkp
                labels:
                  instance_id: ab7f639e-cff2-48db-9825-36c6a5807f7b
                  workflow_name: custom-chaos-workflow-1652688816
              spec:
                engineState: active
                appinfo:
                  appns: default
                  applabel: app=nginx
                  appkind: deployment
                chaosServiceAccount: litmus-admin
                experiments:
                  - name: pod-network-corruption
                    spec:
                      components:
                        env:
                          - name: TOTAL_CHAOS_DURATION
                            value: "60"
                          - name: CONTAINER_RUNTIME
                            value: docker
                          - name: SOCKET_PATH
                            value: /var/run/docker.sock
                          - name: NETWORK_PACKET_CORRUPTION_PERCENTAGE
                            value: "100"
                          - name: PODS_AFFECTED_PERC
                            value: ""
      metadata:
        labels:
          weight: "10"
      name: pod-network-corruption-zkp
      outputs: {}
    - container:
        args:
        - 'kubectl delete chaosengine -l ''instance_id in (ab7f639e-cff2-48db-9825-36c6a5807f7b,
          )'' -n {{workflow.parameters.adminModeNamespace}} '
        command:
        - sh
        - -c
        image: docker.io/chaosnative/k8s:2.8.0
        name: ""
        resources: {}
      inputs: {}
      metadata: {}
      name: revert-chaos
      outputs: {}
status:
  active: null
  conditions: null
  lastScheduledTime: null
