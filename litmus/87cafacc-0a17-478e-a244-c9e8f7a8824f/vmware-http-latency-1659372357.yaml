apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  labels:
    cluster_id: afb7e508-80c0-4c5b-98c3-bec987b9ae8d
    subject: vmware-http-latency_litmus
    workflow_id: d99a9104-a1c8-47e3-a050-ed884afc129a
    workflows.argoproj.io/controller-instanceid: afb7e508-80c0-4c5b-98c3-bec987b9ae8d
  name: vmware-http-latency-1659372357
  namespace: litmus
spec:
  arguments:
    parameters:
    - name: adminModeNamespace
      value: litmus
  entrypoint: custom-chaos
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
  - inputs: {}
    metadata: {}
    name: custom-chaos
    outputs: {}
    steps:
    - - arguments: {}
        name: install-chaos-experiments
        template: install-chaos-experiments
    - - arguments: {}
        name: vmware-http-latency-vrh
        template: vmware-http-latency-vrh
    - - arguments: {}
        name: revert-chaos
        template: revert-chaos
  - container:
      args:
      - kubectl apply -f /tmp/vmware-http-latency-vrh.yaml -n {{workflow.parameters.adminModeNamespace}}
        |  sleep 30
      command:
      - sh
      - -c
      image: chaosnative/k8s:2.11.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: vmware-http-latency-vrh
        path: /tmp/vmware-http-latency-vrh.yaml
        raw:
          data: "apiVersion: litmuschaos.io/v1alpha1\ndescription:\n  message: |\n
            \   Injects http request latency on the VMware VMs \nkind: ChaosExperiment\nmetadata:\n
            \ name: vmware-http-latency\n  labels:\n    name: vmware-http-latency\n
            \   app.kubernetes.io/part-of: litmus\n    app.kubernetes.io/component:
            chaosexperiment\n    app.kubernetes.io/version: latest\nspec:\n  definition:\n
            \   scope: Namespaced\n    permissions:\n      - apiGroups:\n          -
            \"\"\n        resources:\n          - pods\n        verbs:\n          -
            create\n          - delete\n          - get\n          - list\n          -
            patch\n          - update\n          - deletecollection\n      - apiGroups:\n
            \         - \"\"\n        resources:\n          - events\n        verbs:\n
            \         - create\n          - get\n          - list\n          - patch\n
            \         - update\n      - apiGroups:\n          - \"\"\n        resources:\n
            \         - configmaps\n        verbs:\n          - get\n          - list\n
            \     - apiGroups:\n          - \"\"\n        resources:\n          -
            pods/log\n        verbs:\n          - get\n          - list\n          -
            watch\n      - apiGroups:\n          - \"\"\n        resources:\n          -
            pods/exec\n        verbs:\n          - get\n          - list\n          -
            create\n      - apiGroups:\n          - apps\n        resources:\n          -
            deployments\n          - statefulsets\n          - replicasets\n          -
            daemonsets\n        verbs:\n          - list\n          - get\n      -
            apiGroups:\n          - apps.openshift.io\n        resources:\n          -
            deploymentconfigs\n        verbs:\n          - list\n          - get\n
            \     - apiGroups:\n          - \"\"\n        resources:\n          -
            replicationcontrollers\n        verbs:\n          - get\n          - list\n
            \     - apiGroups:\n          - argoproj.io\n        resources:\n          -
            rollouts\n        verbs:\n          - list\n          - get\n      - apiGroups:\n
            \         - batch\n        resources:\n          - jobs\n        verbs:\n
            \         - create\n          - list\n          - get\n          - delete\n
            \         - deletecollection\n      - apiGroups:\n          - litmuschaos.io\n
            \       resources:\n          - chaosengines\n          - chaosexperiments\n
            \         - chaosresults\n        verbs:\n          - create\n          -
            list\n          - get\n          - patch\n          - update\n          -
            delete\n    image: chaosnative/go-runner:ci\n    imagePullPolicy: Always\n
            \   args:\n      - -c\n      - ./experiments -name vmware-http-latency\n
            \   command:\n      - /bin/bash\n    env:\n      - name: LIB_IMAGE\n        value:
            chaosnative/go-runner:ci\n      - name: LATENCY\n        value: \"2000\"\n
            \     - name: TARGET_SERVICE_PORT\n        value: \"80\"\n      - name:
            PROXY_PORT\n        value: \"8080\"\n      - name: TOXICITY\n        value:
            \"100\"\n      - name: TOTAL_CHAOS_DURATION\n        value: \"60\"\n      -
            name: RAMP_TIME\n        value: \"\"\n      - name: GOVC_URL\n        valueFrom:\n
            \         secretKeyRef:\n            name: vcenter-secret\n            key:
            VCENTERSERVER\n      - name: GOVC_USERNAME\n        valueFrom:\n          secretKeyRef:\n
            \           name: vcenter-secret\n            key: VCENTERUSER\n      -
            name: GOVC_PASSWORD\n        valueFrom:\n          secretKeyRef:\n            name:
            vcenter-secret\n            key: VCENTERPASS\n      - name: GOVC_INSECURE\n
            \       value: \"true\"\n      - name: LIB\n        value: litmus\n      -
            name: SEQUENCE\n        value: parallel\n    labels:\n      name: vmware-http-latency\n
            \     app.kubernetes.io/part-of: litmus\n      app.kubernetes.io/component:
            experiment-job\n      app.kubernetes.io/version: latest\n"
    metadata: {}
    name: install-chaos-experiments
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-vmware-http-latency-vrh.yaml
      - -saveName=/tmp/engine-name
      image: chaosnative/litmus-checker:2.11.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: vmware-http-latency-vrh
        path: /tmp/chaosengine-vmware-http-latency-vrh.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              generateName: vmware-http-latency-vrh
              labels:
                instance_id: 57882bec-9c4a-4492-bcda-b0cfbb6dcd34
                workflow_name: vmware-http-latency-1659372357
            spec:
              engineState: active
              chaosServiceAccount: litmus-admin
              experiments:
                - name: vmware-http-latency
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "60"
                        - name: CHAOS_INTERVAL
                          value: "60"
                        - name: VM_NAME
                          value: vm2
                        - name: VM_USER_NAME
                          value: vm2
                        - name: VM_PASSWORD
                          value: "123"
                        - name: LATENCY
                          value: "2000"
                        - name: NETWORK_INTERFACE
                          value: ens160
                        - name: SEQUENCE
                          value: parallel
                        - name: PROXY_PORT
                          value: "8080"
                        - name: TARGET_SERVICE_PORT
                          value: "80"
                    probe: []
    metadata:
      labels:
        weight: "10"
    name: vmware-http-latency-vrh
    outputs: {}
  - container:
      args:
      - 'kubectl delete chaosengine -l ''instance_id in (57882bec-9c4a-4492-bcda-b0cfbb6dcd34,
        )'' -n {{workflow.parameters.adminModeNamespace}} '
      command:
      - sh
      - -c
      image: chaosnative/k8s:2.11.0
      name: ""
      resources: {}
    inputs: {}
    metadata: {}
    name: revert-chaos
    outputs: {}
status:
  finishedAt: null
  startedAt: null
